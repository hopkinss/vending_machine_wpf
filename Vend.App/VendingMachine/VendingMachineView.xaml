<UserControl
    x:Class="Vend.App.VendingMachine.VendingMachineView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:lib="clr-namespace:Vend.Lib;assembly=Vend.Lib"
    xmlns:local="clr-namespace:Vend.App.VendingMachine"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:msg="clr-namespace:Vend.App.Notifications"
    xmlns:root="clr-namespace:Vend.App"
    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <Grid Background="{StaticResource bgMainBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.Resources>
            <local:CanInventoryConverter x:Key="CanInventoryConverter" />
            <local:ExactChangeIndicatorConverter x:Key="ExactChangeIndicatorConverter" />
        </Grid.Resources>
        <!--  heading  -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <!--  user messages  -->
            <msg:NotificationView Grid.ColumnSpan="2" />

            <!--  counters for transaction coinbox and vending machine coin box  -->
            <StackPanel Grid.Column="1" Orientation="Vertical">
                <StackPanel VerticalAlignment="Center" 
                            Orientation="Horizontal">
                    <Label Content="Revenue: $" Foreground="{StaticResource fgAltTextTheme}" />
                    <Label
                        HorizontalAlignment="Center"
                        VerticalAlignment="Top"
                        Content="{Binding Path=Box.ValueOf}"
                        Foreground="{StaticResource fgAltTextTheme}" />
                </StackPanel>
                <StackPanel
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">
                    <Label Foreground="{StaticResource fgAltTextTheme}" Content="Deposited: $" />
                    <Label Foreground="{StaticResource fgAltTextTheme}" Content="{Binding TrxBox.ValueOf}" />
                </StackPanel>
            </StackPanel>
            <StackPanel
                Grid.Row="1"
                Margin="10,0,0,0"
                Orientation="Horizontal">
                <Rectangle
                    Width="15"
                    Height="15"
                    Fill="{Binding CanMakeChange, Converter={StaticResource ExactChangeIndicatorConverter}, NotifyOnTargetUpdated=True}"
                    RadiusX="10"
                    RadiusY="10" />
                <Label Content="Exact change required when lit" Foreground="SlateGray" />
            </StackPanel>

        </Grid>

        <!--  Cans  -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Button
                Command="{Binding EjectCanCommand}"
                CommandParameter="{x:Static lib:Flavor.Orange}"
                Style="{StaticResource CanButton}">
                <StackPanel>
                    <Image Height="150" Source="/Images/orange.jpg" />
                    <Label
                        HorizontalAlignment="Center"
                        Content="{Binding CanRack.CansOfOrange, Converter={StaticResource CanInventoryConverter}, NotifyOnTargetUpdated=True}"
                        Foreground="{StaticResource fgAltTextTheme}" />
                </StackPanel>
            </Button>


            <Button
                Grid.Column="1"
                Command="{Binding EjectCanCommand}"
                CommandParameter="{x:Static lib:Flavor.Lemon}"
                Style="{StaticResource CanButton}">
                <StackPanel>
                    <Image Height="150" Source="/Images/lemon.jpg" />
                    <Label
                        HorizontalAlignment="Center"
                        Content="{Binding CanRack.CansOfLemon, Converter={StaticResource CanInventoryConverter}, NotifyOnTargetUpdated=True}"
                        Foreground="{StaticResource fgAltTextTheme}" />
                </StackPanel>
            </Button>

            <Button
                Grid.Column="2"
                Command="{Binding EjectCanCommand}"
                CommandParameter="{x:Static lib:Flavor.Regular}"
                Style="{StaticResource CanButton}">
                <StackPanel>
                    <Image Height="150" Source="/Images/regular.jpg" />
                    <Label
                        HorizontalAlignment="Center"
                        Content="{Binding CanRack.CansOfRegular, Converter={StaticResource CanInventoryConverter}, NotifyOnTargetUpdated=True}"
                        Foreground="{StaticResource fgAltTextTheme}" />
                </StackPanel>
            </Button>
        </Grid>

        <!--  Coins  -->
        <Grid Grid.Row="2" Margin="20,0,20,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Button
                Command="{Binding DepositCommand}"
                CommandParameter="{x:Static lib:Denomination.NICKEL}"
                Content="5"
                Style="{StaticResource CoinButton}" />

            <Button
                Grid.Column="1"
                Command="{Binding DepositCommand}"
                CommandParameter="{x:Static lib:Denomination.DIME}"
                Content="10"
                Style="{StaticResource CoinButton}" />

            <Button
                Grid.Column="2"
                Command="{Binding DepositCommand}"
                CommandParameter="{x:Static lib:Denomination.QUARTER}"
                Content="25"
                Style="{StaticResource CoinButton}" />

            <Button
                Grid.Column="3"
                Command="{Binding DepositCommand}"
                CommandParameter="{x:Static lib:Denomination.HALFDOLLAR}"
                Content="50"
                Style="{StaticResource CoinButton}" />

            <Button
                Grid.Column="4"
                Margin="20,0,0,0"
                Command="{Binding ReturnCoinsCommand}"
                Style="{StaticResource EjectButton}">
                <TextBlock
                    Width="50"
                    Text="Coin Return"
                    TextAlignment="Center"
                    TextWrapping="Wrap" />
            </Button>
        </Grid>

        <!--  dispensed soda  -->
        <Image
            Grid.Row="3"
            Height="120"
            Margin="5"
            Opacity="0"
            Source="{Binding ImgSoda, NotifyOnTargetUpdated=True}">
            <Image.Triggers>
                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                From="1"
                                To="1"
                                Duration="0:0:2" />
                            <DoubleAnimation
                                BeginTime="0:0:2"
                                DecelerationRatio=".2"
                                Storyboard.TargetProperty="Opacity"
                                From="1"
                                To="0"
                                Duration="0:0:2" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Image.Triggers>
        </Image>
    </Grid>
</UserControl>
